---
- name: Ensure ZSH,GIT packages
  apt: 
    pkg: 
      - zsh
      - git
    state: present
  register: installation
  when: "ansible_system == 'Linux'"
  become: true

- name: Check if .oh-my-zsh exists
  stat:
    path: /root/.oh-my-zsh
  register: stat_oh_my_zsh_result
  when: "ansible_system == 'Linux'"
  become: true

# - name: Cloning oh-my-zsh repo
#   git:
#     repo: https://github.com/robbyrussell/oh-my-zsh
#     dest: /tmp/.oh-my-zsh

- name: Download oh-my-zsh repo
  get_url:
    url: "https://github.com/robbyrussell/oh-my-zsh/archive/refs/heads/master.tar.gz"
    dest: "/tmp/oh-my-zsh.tar.gz"

- name: "Ensure dir /root/.oh-my-zsh"
  file:
    path: "/root/.oh-my-zsh"
    state: directory
  become: true
  when: ansible_system == 'Linux' and not stat_oh_my_zsh_result.stat.exists

- name: Ensure /root/.oh-my-zsh
  unarchive:
    src:  "/tmp/oh-my-zsh.tar.gz"
    dest: "/root/.oh-my-zsh"
    extra_opts: [--strip-components=1]
  become: true
  when: ansible_system == 'Linux' and not stat_oh_my_zsh_result.stat.exists

- name: Creating new /root/.zshrc
  copy:
    src: /root/.oh-my-zsh/templates/zshrc.zsh-template
    dest: /root/.zshrc
    remote_src: yes
  when: ansible_system == 'Linux' and not stat_oh_my_zsh_result.stat.exists

- name: "Configure theme hostname"
  shell: echo $(hostname -s) > /root/.box-name
  args:
    executable: /bin/bash
  become: true
  when: ansible_system == 'Linux' and not stat_oh_my_zsh_result.stat.exists

- name: "Configure theme"
  lineinfile:
    dest: /root/.zshrc
    state: present
    regexp: '^ZSH_THEME='
    line: 'ZSH_THEME="fino-time"'
  when: "ansible_system == 'Linux'"
  become: true

- name: "Enable oh-my-zsh update"
  lineinfile:
    dest: /root/.zshrc
    state: present
    regexp: "^zstyle ':omz:update'"
    line: "zstyle ':omz:update' mode auto"
  when: "ansible_system == 'Linux'"
  become: true

- name: Userhome
  ansible.builtin.set_fact:
    developer_user_home: "/home/{{ developer_username }}"
  when: "ansible_system == 'Linux'"

- name: Userhome
  ansible.builtin.set_fact:
    developer_user_home: "/Users/{{ developer_username }}"
  when: "ansible_system == 'Darwin'"


- name: "Check if .oh-my-zsh exists"
  stat: 
    path: "{{ developer_user_home }}/.oh-my-zsh"
  register: stat_oh_my_zsh_result
  become: true
  become_user: "{{ developer_username }}"
  when: developer_username is defined

- name: "Ensure dir {{ developer_user_home }}/.oh-my-zsh"
  file:
    path: "{{ developer_user_home }}/.oh-my-zsh"
    state: directory
  become: true
  become_user: "{{ developer_username }}"

- name: "Ensure {{ developer_user_home }}/.oh-my-zsh"
  unarchive:
    src:  "/tmp/oh-my-zsh.tar.gz"
    dest: "{{ developer_user_home}}/.oh-my-zsh"
    owner: "{{ developer_username }}"
    extra_opts: [--strip-components=1]
  when: not stat_oh_my_zsh_result.stat.exists and developer_username is defined
  become: true
  become_user: "{{ developer_username }}"

- name: Creating new {{ developer_user_home }}/.zshrc
  copy:
    src: "{{ developer_user_home }}/.oh-my-zsh/templates/zshrc.zsh-template"
    dest: "{{ developer_user_home }}/.zshrc"
    remote_src: yes
  when: not stat_oh_my_zsh_result.stat.exists and developer_username is defined
  become: true
  become_user: "{{ developer_username }}"

- name: "Configure theme hostname for{{ developer_username }}"
  shell: echo $(hostname -s) > /{{ developer_user_home }}/.box-name
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ developer_username }}"
  when: not stat_oh_my_zsh_result.stat.exists and developer_username is defined

- name: "Configure theme for {{ developer_username }}"
  lineinfile:
    dest: "{{ developer_user_home }}/.zshrc"
    state: present
    regexp: '^ZSH_THEME='
    line: 'ZSH_THEME="fino-time"'
  become: true
  become_user: "{{ developer_username }}"
  when: not stat_oh_my_zsh_result.stat.exists and developer_username is defined

- name: Cleanup
  ansible.builtin.file:
    path: /tmp/oh-my-zsh.tar.gz
    state: absent
